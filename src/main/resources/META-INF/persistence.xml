<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">

    <persistence-unit name="jpa1">
        <properties>
            <!-- 필수 속성 -->
            <property name="jakarta.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="jakarta.persistence.jdbc.user" value="sa"/>
            <property name="jakarta.persistence.jdbc.password" value=""/>
            <property name="jakarta.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <!-- ex: mysql과 oracle 페이징은 limit, rownum으로 다르고 가변문자 타입이 varchar와 varchar2로 다르다.
                또한 문자열 자르는 함수는 SQL표준은 SUBSTRING(), Oracle은 SUBSTR()로 조금씩 다르다.
                 위의 dialect는 해당 데이터베이스의 방언을 쓰겠다는 뜻
                    >> 방언 : SQL표준을 지키지 않는 특정 데이터베이스만의 고유한 기능 -->

            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.jdbc.batch_size" value="10"/>

            <!--
            create         : 기존 테이블 삭제 후 다시 생성             (운영DB에는 절대 사용하면 안됨)
            create-drop    : create와 동일 + 종료시점에 테이블 drop    (운영DB에는 절대 사용하면 안됨)
            update         : 변경분만 반영                           (운영DB에는 절대 사용하면 안됨)
            validate       : 엔티티와 테이블이 정상 매핑되었는지만 확인
            none           : 사용하지 않음 (그냥 주석하면 같은 의미)
            -->
            <property name="hibernate.hbm2ddl.auto" value="create" />
        </properties>
    </persistence-unit>
</persistence>